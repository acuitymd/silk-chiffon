name: Rust CI

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  DUCKDB_VERSION: 1.3.2
  RUST_BACKTRACE: 1

jobs:
  rust-ci:
    name: Rust (${{ matrix.rust }}) CI for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        rust: [stable]
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy

      - name: Setup DuckDB (Ubuntu only)
        run: |
          sudo apt-get update
          sudo apt-get install -y curl unzip
          curl -L -O https://github.com/duckdb/duckdb/releases/download/v${{ env.DUCKDB_VERSION }}/libduckdb-linux-amd64.zip
          unzip libduckdb-linux-amd64.zip -d libduckdb
          sudo mv libduckdb/duckdb.* /usr/local/include/
          sudo mv libduckdb/libduckdb.so /usr/local/lib/
          sudo ldconfig /usr/local/lib
          rm -rf libduckdb libduckdb-linux-amd64.zip

      - name: Check formatting
        run: cargo fmt --check

      - name: Check linting
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Check types
        run: cargo check --all-features

      - name: Run tests
        run: cargo test --verbose
