name: Old Python CI

on:
  # push:
  # pull_request:
  #   branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DUCKDB_VERSION: 1.3.2

jobs:
  python-ci:
    name: Python CI for ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      # This defaults to true so we need to explicitly set it to false
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Setup DuckDB (Ubuntu only)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y curl unzip build-essential
          curl -L -O https://github.com/duckdb/duckdb/releases/download/v${DUCKDB_VERSION}/libduckdb-linux-amd64.zip
          unzip libduckdb-linux-amd64.zip -d libduckdb
          sudo mv libduckdb/duckdb.* /usr/local/include/
          sudo mv libduckdb/libduckdb.so /usr/local/lib/
          sudo ldconfig /usr/local/lib
          rm -rf libduckdb libduckdb-linux-amd64.zip

      - name: Setup DuckDB (macOS only)
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          brew install duckdb

      - name: Modify the rust toolchain version
        run: rustup override set stable
      - name: Update rustup and rust
        run: rustup update
      - name: Output rust toolchain version
        run: rustup show
      - name: Output rust version for educational purposes
        run: rustup --version

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: uv sync --locked

      - name: Build and install Python module (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          uv run maturin build --release --features python
          uv run python -m pip install --force-reinstall target/wheels/*manylinux*.whl

      - name: Build and install Python module (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          uv run maturin build --release --features python
          uv run python -m pip install --force-reinstall target/wheels/*.whl

      - name: Check Python formatting
        run: uv run ruff format --check

      - name: Lint Python code
        run: uv run ruff check

      - name: Type check
        if: matrix.python-version == '3.12' && matrix.os == 'ubuntu-latest'
        run: uv run pyright

      - name: Run Python tests
        run: uv run pytest
