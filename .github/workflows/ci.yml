name: CI

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse
  DUCKDB_VERSION: 1.4.1
  RUST_BACKTRACE: 1

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo fmt --check
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Setup DuckDB cache
        id: cache-duckdb
        uses: actions/cache@v4
        with:
          path: |
            /usr/local/lib/libduckdb.so
            /usr/local/lib/libduckdb_static.a
            /usr/local/include/duckdb.h
            /usr/local/include/duckdb.hpp
          key: duckdb-${{ env.DUCKDB_VERSION }}-linux-amd64-2025-10-11

      - name: Install DuckDB
        if: steps.cache-duckdb.outputs.cache-hit != 'true'
        run: |
          set -e
          curl -L -O https://github.com/duckdb/duckdb/releases/download/v${{env.DUCKDB_VERSION}}/libduckdb-linux-amd64.zip
          unzip libduckdb-linux-amd64.zip -d libduckdb
          sudo mv libduckdb/duckdb.* /usr/local/include/
          sudo mv libduckdb/libduckdb* /usr/local/lib/
          sudo ldconfig /usr/local/lib
          rm -rf libduckdb libduckdb-linux-amd64.zip

      - name: Configure DuckDB
        if: steps.cache-duckdb.outputs.cache-hit == 'true'
        run: sudo ldconfig /usr/local/lib

      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "ci-ubuntu-latest"

      - run: cargo clippy --all-targets --all-features --locked -- -D warnings

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y lld

      - name: Setup DuckDB cache
        id: cache-duckdb
        uses: actions/cache@v4
        with:
          path: |
            /usr/local/lib/libduckdb.so
            /usr/local/lib/libduckdb_static.a
            /usr/local/include/duckdb.h
            /usr/local/include/duckdb.hpp
          key: duckdb-${{ env.DUCKDB_VERSION }}-linux-amd64-2025-10-11

      - name: Install DuckDB
        if: steps.cache-duckdb.outputs.cache-hit != 'true'
        run: |
          set -e
          curl -L -O https://github.com/duckdb/duckdb/releases/download/v${{env.DUCKDB_VERSION}}/libduckdb-linux-amd64.zip
          unzip libduckdb-linux-amd64.zip -d libduckdb
          sudo mv libduckdb/duckdb.* /usr/local/include/
          sudo mv libduckdb/libduckdb* /usr/local/lib/
          sudo ldconfig /usr/local/lib
          rm -rf libduckdb libduckdb-linux-amd64.zip

      - name: Configure DuckDB
        if: steps.cache-duckdb.outputs.cache-hit == 'true'
        run: sudo ldconfig /usr/local/lib

      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "ci-ubuntu-latest"

      - name: Get pwd
        run: pwd

      - name: Check disk space
        run: df -h

      - name: Free up disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force

      - name: Check disk space
        run: df -h

      - name: Run tests
        run: cargo test --all-features --locked
