name: "Setup Python Environment"
description: "Setup Python, uv, and sync dependencies"
runs:
  using: "composite"
  steps:
    - uses: taiki-e/install-action@v2
      with:
        tool: cargo-zigbuild,just
    - uses: actions/setup-python@v5
      with:
        python-version: 3.12
    - name: Cache DuckDB
      id: cache-duckdb
      uses: actions/cache@v4
      with:
        path: /usr/local/lib/libduckdb.so
        key: duckdb-${{ env.DUCKDB_VERSION }}-linux-amd64

    - name: Setup DuckDB
      if: steps.cache-duckdb.outputs.cache-hit != 'true'
      shell: bash
      run: |
        curl -L -O https://github.com/duckdb/duckdb/releases/download/v1.3.2/libduckdb-linux-amd64.zip && echo "Downloaded DuckDB" || echo "Failed to download DuckDB"
        unzip libduckdb-linux-amd64.zip -d libduckdb
        sudo mv libduckdb/duckdb.* /usr/local/include/
        sudo mv libduckdb/libduckdb.so /usr/local/lib/
        sudo ldconfig /usr/local/lib
        rm -rf libduckdb libduckdb-linux-amd64.zip
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
        python-version: 3.12

    - name: Cache Python dependencies
      uses: actions/cache@v4
      with:
        path: |
          .venv
          ~/.cache/uv
        key: uv-linux-amd64-python3.12-${{ hashFiles('uv.lock', 'pyproject.toml') }}
        restore-keys: |
          uv-linux-amd64-python3.12-
          uv-linux-amd64

    - name: Sync uv
      run: uv sync --frozen -vv
      shell: bash
